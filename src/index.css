body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}



header{



  display: flex;
  /* agar display direction kuch nhi diya hai , toh displya flex karne se saare element same horizonatal level 
  par aa jeyenge , means ek ke bagal mein ek element aise honge ; ,
  and if you will do flex-direction : column toh fir ek ke niche ek ;  */


  align-items: center; 

  /* since abhi flex direction kuch nhi diya toh saare element agal bagal honge , par ho sakta hai halka sa ek upar
  ho aur ek eleemnt niche , ab unko same level mein laane ke liye align items center kar do  */



  justify-content: space-between; /* elements ke bich mein equal space laane ke liye */
}


.toggle-button{

   border-radius: 2rem;
   height: 50%;
}

.toggle-button:hover{
  cursor: pointer;
}


.dark-mode{
   
  background-color: black;


  height: 100vh;
}


/* .classname likhe ke baad agar tag ka naam likhoge it means us container ke andar jis jiska bhi wo tag hai */
.dark-mode h1{
   color: white;
}

.search{

  background-color: rgb(218, 216, 216);
  border-radius: 2rem;
  display: flex;
  padding: 0.6rem;


  align-items: center; /*most important line isse search icon aur input area same height par ho jayenge  */

  margin-bottom: 2rem;
  margin-top: 1rem;
}
.search-input{
  background-color: rgb(218, 216, 216);

  border: none;

  margin-left: 0.5rem;

  width: 100%;




}

.search-input:focus{
   outline: none;
}

.container{

   max-width: 960px;  /* isse badhi screen mein project khologe toh pura content bich mein aa jayga kynki humne sirf 
   width na likh kar max-width likha hai , usse ye hoga ki conainer ki max width 950 px jaygi now , isse chhoti
   screen mein koi farak nhi padhega but badhi screen mein saara content bich mein aa jayga kyonki iske next step mein
   margin left and margin right auto kar diya hai */

   margin-left: auto;

   margin-right: auto;

   padding-right: 10px; /* by this chhoti sccreen jab hogi tab note element ek dam laptop ke end se na ho kar
   thoda gap bana lega */

   padding-left: 10px;
}


.note-list{

  display: grid ;   

  grid-gap: 1rem; 

  grid-template-columns: repeat(auto-fit , minmax(250px , 1fr));  /*very imprtant line , it is making note-app project
  responsive */



   /* now agar humein repeat ke andar sabse phle likhna hota hai ki ek row ke andar kitne column rakhne hain 
   since humein responsive banana hai aur kitne column banne hain wo dpeend karwana hai , screen aur space ke 
   upar toh hum reapeat ke andar koi number na likh kar auto-fit likh denge ;

   Similarly repeat mein phle kitne column hain wo likhne ke baad humei likhna hota hai ki , ek column 
   ki width kya hogi , now what we will do is that hum responsive banayenge isliye sirf ek particualar
   width na dekar hum range de denge ki wo is range ke andar rahe so */



}


.note{
  background-color: rgb(233, 233, 77);

  

  padding: 1rem;

  border-radius: 1rem;

  height: 10rem;

  display: flex;

  flex-direction: column; /* isse note element jo hai uske saare child element vertically allign ho jayenge ,
  kyonki yaahan par sirf 2 children hain toh sirf 2 hi honge ek uper dusra uske just niche , if you want 
  any spacing between child element of flex parent , you have to do justify-content */


  justify-content: space-between; /* isse text sabse upar aa jayga aur note-footer sabse niche */
}

.note-footer{

  display: flex;

  justify-content: space-between;
}

.new{
  background-color: rgb(122, 224, 224);

}




.text{

    border: none;

    background-color: rgb(122, 224, 224);

    overflow: auto;
}

.text:focus{  /*ye isliye kyonki let say textarea mein jab jaaye toh outline na bane matlab border sa na bane */

  outline:none ; 
}

.delete-icon:hover{
   
    cursor: pointer;
}